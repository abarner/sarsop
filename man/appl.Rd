% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/appl.R
\name{pomdpsol}
\alias{SARSOP}
\alias{appl}
\alias{polgraph}
\alias{pomdpconvert}
\alias{pomdpeval}
\alias{pomdpsim}
\alias{pomdpsol}
\title{APPL wrappers}
\usage{
pomdpsol(model, output = tempfile(), precision = 25, timeout = 10,
  stdout = "")

polgraph(model, policy, output = tempfile(), max_depth = 3,
  max_branches = 10, min_prob = 0.001, stdout = "")

pomdpsim(model, policy, output = tempfile(), steps = 100, simulations = 3,
  stdout = "")

pomdpeval(model, policy, output = tempfile(), steps = 100,
  simulations = 3, stdout = "")

pomdpconvert(model, stdout = "")
}
\arguments{
\item{model}{file/path to the \code{pomdp} model file}

\item{output}{file/path of the output policy file. This is also returned by the function.}

\item{precision}{precision value}

\item{timeout}{timeout in seconds}

\item{stdout}{where output to ‘stdout’, see \code{\link{system2}}. Use \code{FALSE}
to suppress output.}

\item{policy}{file/path to the policy file}

\item{max_depth}{the maximum horizon of the generated policy graph}

\item{max_branches}{maximum number of branches to show in the policy graph}

\item{min_prob}{the minimum probability threshold for a branch to be shown in the policy graph}

\item{steps}{number of steps for each simulation run}

\item{simulations}{as the number of simulation runs}
}
\description{
Wrappers for the APPL executables. The \code{pomdpsol} function solves a model
file and returns the path to the output policy file.
}
\examples{
setwd(tempdir())
model <- system.file("models/example.pomdp", package = "appl")
policy <- pomdpsol(model)
readLines(policy)

# Other tools
evaluation <- pomdpeval(model, policy)
graph <- polgraph(model, policy)
simulations <- pomdpsim(model, policy)
}

